---

- name: Create storage directory
  when: storage
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/opt/swift"
    - "/opt/swift/storage"

- name: Copy sample scripts to storage directory
  copy:
    dest: /opt/swift/{{ item }}
    src: swift/{{ item }}
    force: true
    owner: core
    group: core
    mode: 0644
  when: storage
  with_items:
    - package.json
    - index.js

- name: Check storage registry URL
  shell: etcdctl get /services/storage/storage@1
  when: storage
  register: storage_status
  ignore_errors: true

- name: Destroy stalled units
  shell: fleetctl destroy {{ item }}
  args:
    chdir: /opt/fleet
  when: storage and storage_status.rc != 0
  with_items:
    - swift@1
    - swift-discovery@1

- name: Install storage service
  shell: fleetctl start {{ item }}
  args:
    chdir: /opt/fleet
  when: storage and storage_status.rc != 0
  with_items:
    - swift@1
    - swift-discovery@1

- name: Pause to let storage info propagate
  pause: seconds=5
  when: storage and storage_status.rc != 0
  
- name: Get URL of storage service
  shell: etcdctl get /services/storage/storage@1
  register: storage_url

- name: Add storage entry to /etc/environment, if it does not exist
  sudo: yes
  lineinfile:
    dest: "/etc/environment"
    state: present
    regexp: "^STORAGE_URL="
    line: "STORAGE_URL=\"{{ storage_url.stdout }}\""

