---

# Cuidado! si creo el bridge con "brctl add" pero sin ninguna
# interfaz, luego no soy capaz de llegar a las maquinas virtuales.
# Por eso, utilizo iproute2

- name: Check if bridge is running
  shell: ip link list "{{ bridge_name }}"
  register: bridge_up
  ignore_errors: yes

- name: Create bridge
  sudo: yes
  shell: ip link add "{{ bridge_name }}" type bridge
  when: bridge_up.rc != 0

- name: Enable bridge
  sudo: yes
  shell: ip link set dev "{{ bridge_name }}" up
  when: bridge_up.rc != 0

- name: Set bridge ip address
  sudo: yes
  shell: ip address add "{{ bridge_addr }}/{{ bridge_mask }}" \
         dev "{{ bridge_name }}"
  when: bridge_up.rc != 0

- name: Enable IPv4 routing
  sudo: yes
  sysctl: name="net.ipv4.ip_forward" value=1 state=present sysctl_set=yes

- name: Check if masquerading is configured
  sudo: yes
  shell: iptables -t nat -L POSTROUTING | \
         grep -q "MASQUERADE.*{{ bridge_net }}/{{ bridge_mask }}"
  register: nat_enabled
  ignore_errors: yes

- name: Add masquerading rule
  sudo: yes
  shell: iptables -t nat -A POSTROUTING \
         --src "{{ bridge_net }}/{{ bridge_mask }}" \
         "!" --dst "{{ bridge_net }}/{{ bridge_mask }}" \
         -j MASQUERADE
  when: nat_enabled.rc != 0

- name: Add forwarded ports (SSH, HTTPS, etc)
  sudo: yes
  shell: iptables -t nat -A PREROUTING \
         -i "{{ public_interface }}" -p tcp \
         --dport "{{ item.1.host }}" \
         -j DNAT --to-destination "{{ item.0.address }}:{{ item.1.guest }}"
  when: nat_enabled.rc != 0
  with_subelements:
    - hosts
    - forwards

- name: Set quemu-bridge-helper setuid
  sudo: yes
  file:
    path: /usr/lib/qemu-bridge-helper
    owner: root
    group: "{{ ansible_user_id }}"
    mode: 04750

- name: Set DNSmasq to listen only on bridge interface
  sudo: yes
  template:
    src: dnsmasq-bridge.conf.j2
    dest: /etc/dnsmasq.d/bridge.conf
    owner: root
    group: root

- name: Resolve DNS entries for hosts
  sudo: yes
  lineinfile:
    dest: /etc/hosts
    line: "{{ item.address }}   {{ item.hostname }}"
  with_items: "{{ hosts }}"

- name: Reload dnsmasq
  sudo: yes
  service: name=dnsmasq state=restarted
